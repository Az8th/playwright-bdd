name: test

on:
  push:
    # temp to check
    # branches: [main, beta]
  pull_request:
    branches: [main, beta]

jobs:
  get-playwright-versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        id: get-versions
        with:
          script: |
            const minimalVersion = '1.33';
            const { execSync } = require('node:child_process');
            const info = execSync('npm show --json @playwright/test').toString();
            const { versions } = JSON.parse(info);
            return versions
              .filter((v) => v.match(/\.0$/) && v >= minimalVersion)
              .map((v) => v.replace(/\.0$/, ''));
    outputs:
      versions: ${{ steps.get-versions.outputs.result }}

  test:
    needs: get-playwright-versions
    strategy:
      matrix:
        os: [windows-latest]
        # os: [ubuntu-latest, windows-latest]
        playwrightVersion: [1.36]
        # playwrightVersion: ${{ fromJson(needs.get-playwright-versions.outputs.versions) }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Hello world
        run: |
          write-output "Hello World"
          write-output $(Get-ChildItem -Path test -Recurse -Include test.mjs).FullName
      - run: npm ci
      - run: npm install @playwright/test@${{ matrix.playwrightVersion }}
      - run: npx playwright install --with-deps chromium
      - run: |
          node test/setup.mjs
          node --test $(Get-ChildItem -Path test -Recurse -Include test.mjs).FullName
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: test/**/test-results/
          retention-days: 10
          if-no-files-found: ignore

  # examples:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, windows-latest]
  #       node-version: [16, 18, 20]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #     - run: npm ci
  #     - run: npx playwright install --with-deps chromium
  #     - run: npm run examples
