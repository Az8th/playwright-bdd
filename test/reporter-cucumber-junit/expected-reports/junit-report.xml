<?xml version="1.0" encoding="UTF-8"?>
<testsuite failures="10" skipped="0" name="My suite" time="0.5820000000000003" tests="20">
  <testcase classname="rich feature" name="rich feature › Failing by named before hook" time="0.112">
    <failure type="Error" message="Timed out 1ms waiting for expect(received).toHaveTitle(expected)&#xA;&#xA;Expected string: &quot;Some title1&quot;&#xA;Received string: &quot;&quot;&#xA;Call log:&#xA;  - expect.toHaveTitle with timeout 1ms&#xA;  - waiting for locator(':root')&#xA;  -   locator resolved to &lt;html>…&lt;/html>&#xA;  -   unexpected value &quot;&quot;&#xA;"><![CDATA[Timed out 1ms waiting for expect(received).toHaveTitle(expected)

Expected string: "Some title1"
Received string: ""
Call log:
  - expect.toHaveTitle with timeout 1ms
  - waiting for locator(':root')
  -   locator resolved to <html>…</html>
  -   unexpected value ""

   at ../features/failed-steps.ts:8

   6 |
   7 | Before({ name: 'failing named before hook', tags: '@failing-named-hook' }, async ({ page }) => {
>  8 |   await expect(page).toHaveTitle('Some title1');
     |                      ^
   9 | });
  10 |
  11 | Before({ tags: '@failing-anonymous-hook' }, async ({ page }) => {]]></failure>
    <system-out><![CDATA[Given step failing for scenario "Failing by background step".............skipped
Given Action 1...........................................................skipped]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Failing by background step" time="0.098">
    <failure type="Error" message="expect(received).toEqual(expected) // deep equality&#xA;&#xA;Expected: false&#xA;Received: true"><![CDATA[expect(received).toEqual(expected) // deep equality

Expected: false
Received: true
   at ../features/failed-steps.ts:32

  30 |
  31 | Given('step failing for scenario {string}', async ({ $testInfo }, title: string) => {
> 32 |   if ($testInfo.title === title) expect(true).toEqual(false);
     |                                               ^
  33 | });
  34 |
  35 | Given('failing step', async ({ page }) => {]]></failure>
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............failed
Given Action 1...........................................................skipped]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Failing by anonymous before hook" time="0.10300000000000001">
    <failure type="Error" message="Timed out 1ms waiting for expect(received).toHaveTitle(expected)&#xA;&#xA;Expected string: &quot;Some title2&quot;&#xA;Received string: &quot;&quot;&#xA;Call log:&#xA;  - expect.toHaveTitle with timeout 1ms&#xA;  - waiting for locator(':root')&#xA;  -   locator resolved to &lt;html>…&lt;/html>&#xA;  -   unexpected value &quot;&quot;&#xA;"><![CDATA[Timed out 1ms waiting for expect(received).toHaveTitle(expected)

Expected string: "Some title2"
Received string: ""
Call log:
  - expect.toHaveTitle with timeout 1ms
  - waiting for locator(':root')
  -   locator resolved to <html>…</html>
  -   unexpected value ""

   at ../features/failed-steps.ts:12

  10 |
  11 | Before({ tags: '@failing-anonymous-hook' }, async ({ page }) => {
> 12 |   await expect(page).toHaveTitle('Some title2');
     |                      ^
  13 | });
  14 |
  15 | Given('step that uses failingBeforeFixtureNoStep', async ({ failingBeforeFixtureNoStep }) => {]]></failure>
    <system-out><![CDATA[Given step failing for scenario "Failing by background step".............skipped
Given Action 1...........................................................skipped]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Failing by step" time="1">
    <failure type="Error" message="Timed out 1ms waiting for expect(received).toBeVisible()&#xA;Call log:&#xA;  - expect.toBeVisible with timeout 1ms&#xA;  - waiting for getByText('missing string')&#xA;"><![CDATA[Timed out 1ms waiting for expect(received).toBeVisible()
Call log:
  - expect.toBeVisible with timeout 1ms
  - waiting for getByText('missing string')

   at ../features/failed-steps.ts:37

  35 | Given('failing step', async ({ page }) => {
  36 |   await page.goto('https://example.com');
> 37 |   await expect(page.getByText('missing string')).toBeVisible();
     |                                                  ^
  38 | });
  39 |
  40 | Given('timeouted step', async ({ page, $test }) => {]]></failure>
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given failing step........................................................failed]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Failing by failingBeforeFixtureWithStep" time="0.121">
    <failure type="Error" message="error in failingBeforeFixtureWithStep"><![CDATA[error in failingBeforeFixtureWithStep
   at ../features/fixtures.ts:24

  22 |     await test.step('my step', async () => {
  23 |       await testInfo.attach('my attachment', { body: '|in step' });
> 24 |       throw new Error('error in failingBeforeFixtureWithStep');
     |             ^
  25 |     });
  26 |     await use();
  27 |     await testInfo.attach('my attachment', { body: 'should not attach' });]]></failure>
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given step that uses failingBeforeFixtureWithStep........................skipped
When Action 2............................................................skipped]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Failing by failingAfterFixtureNoStep" time="0.005">
    <failure type="Error" message="error in failingAfterFixtureNoStep"><![CDATA[error in failingAfterFixtureNoStep
   at ../features/fixtures.ts:33

  31 |     await use();
  32 |     await testInfo.attach('my attachment', { body: '|after use' });
> 33 |     throw new Error('error in failingAfterFixtureNoStep');
     |           ^
  34 |   },
  35 |   failingAfterFixtureWithStep: async ({}, use, testInfo) => {
  36 |     await testInfo.attach('my attachment', { body: '|outside step (before use)' });]]></failure>
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given step that uses failingAfterFixtureNoStep............................passed
When Action 3.............................................................passed]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Failing by failingBeforeFixtureNoStep" time="0.146">
    <failure type="Error" message="error in failingBeforeFixtureNoStep"><![CDATA[error in failingBeforeFixtureNoStep
   at ../features/fixtures.ts:15

  13 |     await (async () => {
  14 |       await testInfo.attach('my attachment', { body: '|in step' });
> 15 |       throw new Error('error in failingBeforeFixtureNoStep');
     |             ^
  16 |     })();
  17 |     await use();
  18 |     await testInfo.attach('my attachment', { body: 'should not attach' });]]></failure>
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given step that uses failingBeforeFixtureNoStep..........................skipped
When Action 1............................................................skipped]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › timeout in before fixture" time="-1.9999999999999998">
    <failure type="Error" message="Test timeout of 10ms exceeded while setting up &quot;timeoutedBeforeFixture&quot;."><![CDATA[Test timeout of 10ms exceeded while setting up "timeoutedBeforeFixture".]]></failure>
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given Action 0...........................................................skipped
Given step that uses timeouted before fixture............................skipped
When Action 1............................................................skipped]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Failing by failingAfterFixtureWithStep" time="0.006">
    <failure type="Error" message="error in failingAfterFixtureWithStep"><![CDATA[error in failingAfterFixtureWithStep
   at ../features/fixtures.ts:41

  39 |     await test.step('step in failingAfterFixtureWithStep', async () => {
  40 |       await testInfo.attach('my attachment', { body: '|in step' });
> 41 |       throw new Error('error in failingAfterFixtureWithStep');
     |             ^
  42 |     });
  43 |   },
  44 |   timeoutedBeforeFixture: async ({}, use, testInfo) => {]]></failure>
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given step that uses failingAfterFixtureWithStep..........................passed
When Action 4.............................................................passed]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Scenario with data table" time="0.001">
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
When Step with data table.................................................passed]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Scenario with all keywords" time="0.002">
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given Action 1............................................................passed
And Action 2..............................................................passed
When Action 3.............................................................passed
And Action 4..............................................................passed
Then Action 5.............................................................passed
But Action 6..............................................................passed
* Action 7................................................................passed]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Check doubled" time="0">
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given Action 2............................................................passed
Then Action 4.............................................................passed]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Check doubled [1]" time="0">
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given Action 3............................................................passed
Then Action 6.............................................................passed]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Check doubled [2]" time="0">
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given Action 4............................................................passed
Then Action 8.............................................................passed]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Check doubled [3]" time="0.001">
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given Action 5............................................................passed
Then Action 10............................................................passed]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › failing match snapshot" time="0.9800000000000001">
    <failure type="Error" message="Snapshot comparison failed:&#xA;&#xA;  bla-blaExample Domain&#xA;&#xA;Expected: /Users/vitalets/projects/playwright-bdd/test/reporter-cucumber-junit/test-results/features-sample.feature-rich-feature-failing-match-snapshot/rich-feature-failing-match-snapshot-1-expected.txt&#xA;Received: /Users/vitalets/projects/playwright-bdd/test/reporter-cucumber-junit/test-results/features-sample.feature-rich-feature-failing-match-snapshot/rich-feature-failing-match-snapshot-1-actual.txt"><![CDATA[Snapshot comparison failed:

  bla-blaExample Domain

Expected: /Users/vitalets/projects/playwright-bdd/test/reporter-cucumber-junit/test-results/features-sample.feature-rich-feature-failing-match-snapshot/rich-feature-failing-match-snapshot-1-expected.txt
Received: /Users/vitalets/projects/playwright-bdd/test/reporter-cucumber-junit/test-results/features-sample.feature-rich-feature-failing-match-snapshot/rich-feature-failing-match-snapshot-1-actual.txt
   at ../features/steps.ts:36

  34 |
  35 | Then('page title snapshot matches the golden one', async ({ page }) => {
> 36 |   expect(await page.title()).toMatchSnapshot();
     |                              ^
  37 | });
  38 |]]></failure>
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
When open page "https://example.com"......................................passed
Then page title snapshot matches the golden one...........................failed]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Scenario with doc string" time="0.002">
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Then Step with doc string.................................................passed]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Scenario with attachments" time="0.005">
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given attach text.........................................................passed
And attach image inline...................................................passed
And attach image as file..................................................passed]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Check doubled [4]" time="0">
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given Action 6............................................................passed
Then Action 12............................................................passed]]></system-out>
  </testcase>
  <testcase classname="rich feature" name="rich feature › Check doubled [5]" time="0">
    <system-out><![CDATA[Given step failing for scenario "Failing by background step"..............passed
Given Action 10...........................................................passed
Then Action 20............................................................passed]]></system-out>
  </testcase>
</testsuite>